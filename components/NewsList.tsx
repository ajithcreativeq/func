// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import {
  PlasmicNewsList,
  DefaultNewsListProps
} from "./plasmic/func/PlasmicNewsList";
import { HTMLElementRefOf } from "@plasmicapp/react-web";

import ApolloClient from "apollo-boost";
import { ApolloProvider, Query } from "react-apollo";
import gql from "graphql-tag";

const client = new ApolloClient({
  uri: 'https://astra.nzstaging.com/graphql',
})

export interface NewsListProps extends DefaultNewsListProps {}

function NewsList_(props: NewsListProps, ref: HTMLElementRefOf<"div">) {
  return (
    <ApolloProvider client={client}>
      <Query query={gql`
          {
            posts {
              edges {
                node {
                  title
                  excerpt
                }
              }
            }
          }
      `}>
        {          
          ({ loading, error, data }: { loading: any; error: any; data: any; }) => {
            if( loading ) {
              return(<div suppressHydrationWarning={true}>Loading..</div>);
            }

            //console.log(data);
            return(
              <div className={props.className}>
                {
                  data.posts.edges.map((post, key) => {
                    return(
                      <div key={key}>
                        <h2>{post.node.title}</h2>
                        <div dangerouslySetInnerHTML={{__html: post.node.excerpt}} />
                      </div>
                    )
                  })
                }
              </div>
            )
          }
        }
        
      </Query>

    </ApolloProvider>
  );
}

const NewsList = React.forwardRef(NewsList_);
export default NewsList;
